## Automatic Links

Moose Flavored Markdown is capable of automatically creating links based on Markdown filenames, which is
especially useful when linking to generated pages. The syntax is identical to creating links as
defined by [mkdocs], however the markdown path may be incomplete.

* `[/Diffusion.md]`: [/Diffusion.md]
* `[/Kernels/index..md]`: [systems/Kernels/index.md]
* `[Diffusion](/Diffusion.md)`: [Diffusion](/Diffusion.md)

---

## Including MOOSE Source Files

### Optional Settings
The following options may be passed to control how the output is formatted.


| Option               | Default | Description |
| -------------------- | ------- | ----------- |
| strip_header         | True    | Toggles the removal of the MOOSE copyright header. |
| repo_link            | True    | Include a link to the source code on GitHub ("label" must be True). |
| label                | True    | Include a label with the filename before the code content block. |
| overflow-y           | Scroll  | The action to take when the text overflow the html container (see [overflow-y](http://www.w3schools.com/cssref/css3_pr_overflow-y.asp)). |
| max-height           | 500px   | The maximum height of the code window (see [max-height](http://www.w3schools.com/cssref/pr_dim_max-height.asp)). |
| strip-extra-newlines | False   | Remove excessive newlines from the included code. |

---

## MOOSE Syntax
A set of special keywords exist for creating MOOSE specific links and tables within your markdown, each are explained below. Note, the
examples below refer to documentation associated with Kernels and/or the Diffusion Kernel. This should be replaced by
the syntax for the system or object being documented.

* `!description /Kernels/Diffusion`: Inserts the class description (added via `addClassDescription` method) from the compiled application.
* `!parameters /Kernels/Diffusion`: Inserts tables describing the available input parameters for an object or action.
* `!inputfiles /Kernels/Diffusion`: Creates a list of input files that use the object or action.
* `!childobjects /Kernels/Diffusion`: Create a list of objects that inherit from the supplied object.
* `!subobjects /Kernels`: Creates a table of objects within the supplied system.
* `!subsystems /Adaptivity`: Creates a table of sub-systems within the supplied system.
